name: Scrape status of water outages

on:
  push:
  workflow_dispatch:
  schedule:
  - cron:  '59 * * * *'

permissions:
  contents: write

jobs:
  shot-scraper:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install imagemagick
      run: |
        mkdir -p "$HOME/.local/bin"
        curl -O --location 'https://download.imagemagick.org/archive/binaries/magick'
        chmod u+x magick
        mv magick "$HOME/.local/bin"
        ls "$HOME/.local/bin"
        echo "$HOME/.local/bin" >> "$GITHUB_PATH"
        sudo apt-get install -y libfuse2

    - name: Check imagemagick
      run: magick -version

    - name: Cache Oxipng
      uses: actions/cache@v3
      with:
        path: ~/.cargo/
        key: ${{ runner.os }}-cargo
    - name: Install Oxipng if it is not installed
      run: |
        which oxipng || cargo install oxipng

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: "pip"

    - name: Cache Playwright browsers
      uses: actions/cache@v3
      with:
        path: ~/.cache/ms-playwright/
        key: ${{ runner.os }}-playwright

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        shot-scraper install

    - name: Scrape
      run: |
        export FILEPATH="images/tn2/southeastwater-tn2-$(date +%s).png"
        shot-scraper https://inyourarea.digdat.co.uk/southeastwater\?pc\=tn2 --wait 5000 -a auth.json --width 1375 --height 1100 -s '#map-container' -o "$FILEPATH"
        echo "FILEPATH=${FILEPATH}" >> $GITHUB_ENV

    - name: Optimize PNGs
      run: |-
        oxipng -o 4 -i 0 --strip safe "$FILEPATH"

    - name: Create animation
      run: |-
        magick -delay 20 -loop 0 images/tn2/*.png tn2-animated.gif

    - name: Commit and push
      run: |-
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date -u)
        git commit -m "${timestamp}" || exit 0
        git pull --rebase
        git push
